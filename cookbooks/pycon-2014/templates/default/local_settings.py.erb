# -*- coding: utf-8 -*-

# Note: This is imported by the main settings file, so only changes to
# what's there need to be included here.

DATABASES = {
    'default': {
        'NAME': '<%= @database[:settings][:database] %>',
        'ENGINE': 'django.db.backends.<%= @database[:settings][:engine] %>',
        'USER': '<%= @database[:settings][:username] %>',
        'PASSWORD': '<%= @database[:settings][:password] %>',
        'HOST': '<%= @database[:settings][:hostname] %>',
        'PORT': '<%= @database[:settings][:port]  %>',
    },
}

ALLOWED_HOSTS = [
    '.python.org',
    'staging-pycon.python.org',
     "<%= node["fqdn"] %>"
]

SECRET_KEY = '<%= @secret_key %>'
GRAYLOG_HOST = '<%= @graylog_host %>'

EMAIL_HOST = "mail.python.org"

ADMINS = (
    ('Ernest W. Durbin III', 'ewdurbin@gmail.com'),
    ('Caktus Pycon Team', 'pycon@caktusgroup.com'),
)
# From address:
SERVER_EMAIL = 'pycon@caktusgroup.com'
# The main settings send email to the console, go back to the default
# that uses SMTP
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

MANAGERS = ADMINS

COMPRESS_ENABLED = True

from django.utils.log import DEFAULT_LOGGING
LOGGING = DEFAULT_LOGGING

LOGGING['filters'].update(
    {
        'static_fields': {
            '()': 'pycon.logfilters.StaticFieldFilter',
            'fields': {'deployment': 'pycon', 'environment': 'staging'},
            },
        'django_exc': {
            '()': 'pycon.logfilters.RequestFilter',
            },
     }
)
LOGGING['handlers'].update(
    {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': False,
            'filters': ['require_debug_false'],
        },
        'sam_gelf': {
            'class': 'graypy.GELFHandler',
            'host': GRAYLOG_HOST,
            'port': 12201,
            'filters': ['static_fields', 'django_exc'],
        }
    }
)
LOGGING['loggers'].update(
    {
        'django.request': {
            'handlers': ['mail_admins', 'sam_gelf'],
            'level': 'ERROR',
            'propagate': True,
            },
        'pycon': {
            # mail_admins will only accept ERROR and higher
            'handlers': ['mail_admins', 'sam_gelf'],
            'level': 'WARNING',
            },
        'symposion': {
            # mail_admins will only accept ERROR and higher
            'handlers': ['mail_admins', 'sam_gelf'],
            'level': 'WARNING',
            }
    }
)
