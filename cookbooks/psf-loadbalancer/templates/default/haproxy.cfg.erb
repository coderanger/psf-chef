defaults
  log global
  mode http
  option httplog
  option http-server-close
  option forwardfor
  balance roundrobin
  retries 3
  maxconn 2000
  contimeout 5000
  clitimeout 50000
  srvtimeout 50000
  option httpchk
  monitor-uri /_haproxy_status

<%- {'http'=>'0.0.0.0:80', 'https'=>'127.0.0.1:8000 accept-proxy'}.each do |proto, bind| -%>
frontend <%= proto %>
  bind <%= bind %>
  reqadd X-Forwarded-Proto:\ <%= proto %>

  acl host_pypi hdr(host) -i pypi.python.org cheeseshop.python.org packages.python.org pythonhosted.org a.pypi.python.org b.pypi.python.org d.pypi.python.org g.pypi.python.org
  acl host_testpypi hdr(host) -i testpypi.python.org
  acl host_wiki hdr(host) -i wiki.python.org
  acl host_pypy hdr(host) -i pypy.org www.pypy.org
  acl host_preview hdr(host) -i preview.python.org preview.front.python.org
  acl host_raspberry hdr(host) -i raspberry.io www.raspberry.io raspberry.front.python.org
  acl host_evote hdr(host) -i vote.python.org
  acl host_uspycon hdr(host) -i us.pycon.org
  acl host_uspycon_staging hdr(host) -i staging-pycon.python.org

  use_backend pypi if host_pypi
  use_backend testpypi if host_testpypi
  use_backend wiki if host_wiki
  use_backend pypy-home if host_pypy
  use_backend preview if host_preview
  use_backend raspberry if host_raspberry
  use_backend evote if host_evote
  use_backend uspycon if host_uspycon
  use_backend uspycon-staging if host_uspycon_staging
<%- end -%>

listen pypi-logging
  bind 0.0.0.0:51450
  mode tcp
  option tcplog

  <%- @pypi_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:51450
  <%- end -%>

  acl fastly src 199.27.72.0/21 83.223.121.248/29 103.244.50.0/24 103.245.222.0/23 103.245.224.0/24 202.21.128.53 203.57.145.55
  tcp-request connection accept if fastly
  tcp-request connection reject

backend pypi
  <%- @pypi_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend testpypi
  <%- @testpypi_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend wiki
  reqidel ^X-Forwarded-For:.*
  <%- @wiki_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend pypy-home
  option httpchk GET / HTTP/1.1\r\nHost:\ pypy.org
  <%- @pypy_home_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend preview
  <%- @preview_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend raspberry
  <%- @raspberry_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend evote
  <%- @evote_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:8000 check port 8000
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend uspycon
  <%- @uspycon_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

backend uspycon-staging
  <%- @uspycon_staging_servers.each do |server| -%>
  server <%= server.name %> <%= server['fqdn'] %>:80 check port 80
  <%- end -%>
  # provide a maintenance page functionality, only used when all other servers are down
  server fallback localhost:8080 backup

listen stats 127.0.0.1:1936
  mode http
  stats enable
  stats uri /
